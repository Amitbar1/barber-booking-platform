version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: padel-pro-postgres
    environment:
      POSTGRES_DB: padel_pro_israel
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - padel-pro-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: padel-pro-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - padel-pro-network

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: padel-pro-api
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/padel_pro_israel?schema=public
      REDIS_URL: redis://redis:6379
      PORT: 3001
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/api:/app/apps/api
      - /app/apps/api/node_modules
    networks:
      - padel-pro-network
    command: npm run dev

  # Frontend Web App
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: padel-pro-web
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:3001/api
      VITE_WS_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ./apps/web:/app/apps/web
      - /app/apps/web/node_modules
    networks:
      - padel-pro-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  padel-pro-network:
    driver: bridge
